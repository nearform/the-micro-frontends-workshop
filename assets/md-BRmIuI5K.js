import{b as s,o as i,w as r,g as e,v as l,x as p,T as o}from"./modules/vue-WJU96poD.js";import{I as u}from"./slidev/default-CDHe6YmR.js";import{u as d,f as c}from"./slidev/context-D4L7Hmhe.js";import"./index-CmpTU64S.js";import"./modules/shiki-Ca4DXXqb.js";const _={__name:"slides.md__slidev_7",setup(m){const{$clicksContext:a,$frontmatter:n}=d();return a.setup(),(h,t)=>(i(),s(u,l(p(o(c)(o(n),6))),{default:r(()=>t[0]||(t[0]=[e("h2",null,"Module federation with Webpack",-1),e("div",null,[e("p",null,"As mentioned earlier, initially, module federation was implemented as a plugin introduced in Webpack 5. To set up Module Federation in Webpack, you need to define the federated modules in your Webpack configuration files, specify the remote entry points and expose specific modules (aka “remotes”) that you want to share with other applications. The remote entry points represent the Webpack builds that expose modules for consumption."),e("p",null,"In the consuming application's (aka “host”) Webpack configuration, you define which federated modules you want to consume. You specify the remote entry points and the modules you want to import from those remotes. When you build and run your applications, Webpack dynamically loads the federated modules at runtime. It fetches the remote entry points, resolves the requested modules, and injects them into the consuming application. This process allows you to share code between applications without physically bundling everything together."),e("p",null,"Note that as an application has multiple dependencies, a host can also have multiple remotes.")],-1)])),_:1,__:[0]},16))}};export{_ as default};
